{"ast":null,"code":"var _jsxFileName = \"/Users/koushikdey/Desktop/React practice/full-stack-open/src/components/Content.js\",\n  _s = $RefreshSig$();\nimport Person from \"./Person\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = _ref => {\n  _s();\n  let {\n    persons\n  } = _ref;\n  const [showAll, setShowAll] = useState(true);\n  const personsToShow = showAll ? persons : persons.filter(person => person);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: personsToShow.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n      person: person\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_s(Content, \"SbQN0HBsKJH5oo2DyhiIB+L40PY=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["Person","Content","persons","showAll","setShowAll","useState","personsToShow","filter","person","map","i"],"sources":["/Users/koushikdey/Desktop/React practice/full-stack-open/src/components/Content.js"],"sourcesContent":["import Person from \"./Person\";\n\nconst Content = ({ persons }) => {\n  const [showAll, setShowAll] = useState(true);\n  const personsToShow = showAll\n  ? persons\n  : persons.filter(person => person)\n  \n  return (\n      <ul>\n        {personsToShow.map((person, i) =>\n          <Person key={i} person={person} />\n        )}\n    </ul>\n  )\n}\n\nexport default Content;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAAC;AAE9B,MAAMC,OAAO,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMC,aAAa,GAAGH,OAAO,GAC3BD,OAAO,GACPA,OAAO,CAACK,MAAM,CAACC,MAAM,IAAIA,MAAM,CAAC;EAElC,oBACI;IAAA,UACGF,aAAa,CAACG,GAAG,CAAC,CAACD,MAAM,EAAEE,CAAC,kBAC3B,QAAC,MAAM;MAAS,MAAM,EAAEF;IAAO,GAAlBE,CAAC;MAAA;MAAA;MAAA;IAAA,QAAoB;EACnC;IAAA;IAAA;IAAA;EAAA,QACA;AAET,CAAC;AAAA,GAbKT,OAAO;AAAA,KAAPA,OAAO;AAeb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}