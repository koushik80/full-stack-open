{"ast":null,"code":"var _jsxFileName = \"/Users/koushikdey/Desktop/React practice/full-stack-open/src/components/Countries.js\";\nimport React from \"react\";\nimport Country from \"./Country\";\nimport CountryInfo from \"./CountryInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  let {\n    countries,\n    filterValue\n  } = _ref;\n  let filteredCountry = [];\n  if (countries.length > 0) {\n    filteredCountry = countries.filter(country => country.name.toLowerCase().includes(filterValue.toLowerCase()));\n  } else {\n    filteredCountry = countries;\n  }\n  if (filteredCountry.length > 10) {\n    return 'Too many matches, specify another filter';\n  } else if (filteredCountry.length === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CountryInfo, {\n        country: filteredCountry[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredCountry.map(country => /*#__PURE__*/_jsxDEV(Country, {\n          country: country\n        }, country.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n};\nexport default Countries;","map":{"version":3,"names":["React","Country","CountryInfo","Countries","countries","filterValue","filteredCountry","length","filter","country","name","toLowerCase","includes","map"],"sources":["/Users/koushikdey/Desktop/React practice/full-stack-open/src/components/Countries.js"],"sourcesContent":["import React from \"react\";\nimport Country from \"./Country\";\nimport CountryInfo from \"./CountryInfo\";\n\n\nconst Countries = ({ countries, filterValue }) => {\n  let filteredCountry = [];\n\n  if (countries.length > 0) {\n    filteredCountry = countries.filter(country =>\n      country.name.toLowerCase().includes(filterValue.toLowerCase()))\n  } else {\n    filteredCountry = countries\n  }\n\n  if (filteredCountry.length > 10) {\n    return 'Too many matches, specify another filter';\n\n  } else if (filteredCountry.length === 1) {\n    return (\n      <div>\n        <CountryInfo country={filteredCountry[0] } />\n      </div>\n        )\n  } else {\n    return (\n      <div>\n        <ul>\n          {filteredCountry.map(country =>\n            <Country\n                key={country.name}\n                country={country}\n            />\n          )}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Countries;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC;AAGxC,MAAMC,SAAS,GAAG,QAAgC;EAAA,IAA/B;IAAEC,SAAS;IAAEC;EAAY,CAAC;EAC3C,IAAIC,eAAe,GAAG,EAAE;EAExB,IAAIF,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;IACxBD,eAAe,GAAGF,SAAS,CAACI,MAAM,CAACC,OAAO,IACxCA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,WAAW,CAACM,WAAW,EAAE,CAAC,CAAC;EACnE,CAAC,MAAM;IACLL,eAAe,GAAGF,SAAS;EAC7B;EAEA,IAAIE,eAAe,CAACC,MAAM,GAAG,EAAE,EAAE;IAC/B,OAAO,0CAA0C;EAEnD,CAAC,MAAM,IAAID,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IACvC,oBACE;MAAA,uBACE,QAAC,WAAW;QAAC,OAAO,EAAED,eAAe,CAAC,CAAC;MAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzC;EAEV,CAAC,MAAM;IACL,oBACE;MAAA,uBACE;QAAA,UACGA,eAAe,CAACO,GAAG,CAACJ,OAAO,iBAC1B,QAAC,OAAO;UAEJ,OAAO,EAAEA;QAAQ,GADZA,OAAO,CAACC,IAAI;UAAA;UAAA;UAAA;QAAA,QAEnB;MACH;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACD;EAEV;AACF,CAAC;AAED,eAAeP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}